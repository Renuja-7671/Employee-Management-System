version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ems-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ems_user
      POSTGRES_PASSWORD: ems_password
      POSTGRES_DB: ems_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ems-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ems_user -d ems_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ems-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Database URLs (connecting to postgres service)
      DATABASE_URL: "postgresql://ems_user:ems_password@postgres:5432/ems_db?schema=public"
      DIRECT_URL: "postgresql://ems_user:ems_password@postgres:5432/ems_db?schema=public"

      # Supabase Configuration
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}

      # Setup Password
      NEXT_PUBLIC_SETUP_PASSWORD: ${NEXT_PUBLIC_SETUP_PASSWORD:-UIS_ADMIN_2025}

      # Node Environment
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ems-network
    command: sh -c "npx prisma migrate deploy && node server.js"

networks:
  ems-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
